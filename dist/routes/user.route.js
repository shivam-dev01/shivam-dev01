"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = __importDefault(require("express"));
var RequestValidation_1 = require("../classes/RequestValidation");
var requestValidationConfig_1 = require("../config/requestValidationConfig");
var controllers_1 = require("../controllers");
//-------------------employeeDetails-------------------
var userRouter = express_1.default.Router();
userRouter.post("/create-employeeDetail", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.createEmployeeDetails), controllers_1.userController.createEmployeeDetails);
userRouter.put("/update-employee/:id", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.configureEmployeeUpdateDetails), controllers_1.userController.updateEmployeeDetails);
userRouter.post("/get-login-info", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.loginInfo), controllers_1.userController.loginInfo);
userRouter.get("/get-last-login-time/:mobileNumber", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.getLastLoginTime), controllers_1.userController.getLastLoginTime);
userRouter.put("/user-status/:id/:mobileNumber", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.userStatus), controllers_1.userController.userStatus);
userRouter.get("/generate-employeeId", controllers_1.userController.generateEmployeeId);
userRouter.get("/get-all-employeeDetails", controllers_1.userController.getAllEmployeeDetails);
userRouter.get("/get-specified-employeeDetails/:userId", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.getOneEmployeeDetails), controllers_1.userController.getspecifiedEmployeeDetails);
userRouter.put("/employee-status/:id", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.employeeStatus), controllers_1.userController.employeeStatus);
userRouter.get("/last-generated-employee-id", controllers_1.userController.lastGeneratedEmpId);
userRouter.get("/get-admin-profile-details", controllers_1.userController.getAdminProfileDetails);
userRouter.put("/update-admin-profile/:id", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.updateAdminProfile), controllers_1.userController.updateAdminProfile);
userRouter.post("/attendance", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.markAttendance), controllers_1.userController.markAttendance);
userRouter.get("/single-users-attendance-report", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.getAttendanceReport), controllers_1.userController.getAttendanceReport);
userRouter.get("/get-attendance-report/:id", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.getSingleReport), controllers_1.userController.getSingleReport);
userRouter.get("/get-custom-attendance-report", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.getCustomReport), controllers_1.userController.getCustomReport);
userRouter.get("/get-custom-employee-list", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.getCustomEmployeeList), controllers_1.userController.getCustomEmployeeList);
userRouter.put("/assign-shift/:id", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.assignShift), controllers_1.userController.assignShift);
userRouter.get("/filter-employee-list", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.filteredEmployee), controllers_1.userController.filteredEmployee);
userRouter.get("/employee-attendance-report", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.employeeAttendanceReport), controllers_1.userController.employeeAttendanceReport);
userRouter.get("/attendance-report", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.attendanceReport), controllers_1.userController.attendanceReport);
userRouter.get("/search-employee", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.searchEmployee), controllers_1.userController.searchEmployee);
userRouter.get("/search-attendance", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.searchAttendance), controllers_1.userController.searchAttendance);
userRouter.get("/employee-search-attendance", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.employeeSearchAttendance), controllers_1.userController.employeeSearchAttendance);
userRouter.put("/employee-upload-profile-image/:id", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.uploadImage), controllers_1.userController.uploadImage);
userRouter.put("/admin-upload-profile-image/:id", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.uploadImage), controllers_1.userController.adminUploadImage);
userRouter.get("/monthly-yearly-single-user-attendance-report", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.monthlyYearlyAttendanceReport), controllers_1.userController.monthlyYearlyAttendanceReport);
userRouter.get("/monthly-yearly-complete-report", RequestValidation_1.RequestValidation.validateFunction(requestValidationConfig_1.requestValidationConfig.monthlyYearlyCompleteReport), controllers_1.userController.monthlyYearlyCompleteReport);
exports.default = userRouter;
